{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-ADE"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select id,name from dbo.tb3_source",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "tb3_source"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "tb1_dest"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3_copy3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dynamic_sql_bd_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": {
										"value": "@pipeline().parameters.source_tbl_name",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.source_db_name",
										"type": "Expression"
									},
									"sql_name": {
										"value": "@pipeline().parameters.source_sql",
										"type": "Expression"
									},
									"username": {
										"value": "@pipeline().parameters.source_username",
										"type": "Expression"
									},
									"password": {
										"value": "@pipeline().parameters.source_password",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dynamic_sql_bd_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": {
										"value": "@pipeline().parameters.dest_tbl_name",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.dest_db_name",
										"type": "Expression"
									},
									"sql_name": {
										"value": "@pipeline().parameters.dest_sql",
										"type": "Expression"
									},
									"username": {
										"value": "@pipeline().parameters.dest_username",
										"type": "Expression"
									},
									"password": {
										"value": "@pipeline().parameters.dest_password",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_tbl_name": {
						"type": "string"
					},
					"dest_tbl_name": {
						"type": "string"
					},
					"source_db_name": {
						"type": "string"
					},
					"dest_db_name": {
						"type": "string"
					},
					"source_username": {
						"type": "string"
					},
					"dest_username": {
						"type": "string"
					},
					"source_password": {
						"type": "string"
					},
					"dest_password": {
						"type": "string"
					},
					"source_sql": {
						"type": "string"
					},
					"dest_sql": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": {
										"value": "@pipeline().parameters.source_tbl",
										"type": "Expression"
									},
									"sql_name": {
										"value": "@pipeline().parameters.server_source",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.db_source",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": {
										"value": "@pipeline().parameters.dest_tbl",
										"type": "Expression"
									},
									"sql_name": {
										"value": "@pipeline().parameters.server_dest",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.db_dest",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_tbl": {
						"type": "string"
					},
					"dest_tbl": {
						"type": "string"
					},
					"server_source": {
						"type": "string"
					},
					"server_dest": {
						"type": "string"
					},
					"db_source": {
						"type": "string"
					},
					"db_dest": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "DAILY_COPYLIST"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dynamic_tbl_schema",
											"type": "DatasetReference",
											"parameters": {
												"schemaname": {
													"value": "@item().INPUT_SCHEMA",
													"type": "Expression"
												},
												"tblname": {
													"value": "@item().INPUT_FILENAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "dynamic_tbl_schema",
											"type": "DatasetReference",
											"parameters": {
												"schemaname": {
													"value": "@item().OUTPUT_SCHEMA",
													"type": "Expression"
												},
												"tblname": {
													"value": "@item().OUTPUT_FILENAME",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dynamic_sql_bd_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": {
										"value": "@pipeline().parameters.source_tbl",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.source_db",
										"type": "Expression"
									},
									"sql_name": {
										"value": "@pipeline().parameters.source_server",
										"type": "Expression"
									},
									"username": {
										"value": "@pipeline().parameters.source_usrname",
										"type": "Expression"
									},
									"password": {
										"value": "@pipeline().parameters.source_password",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dynamic_sql_bd_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": {
										"value": "@pipeline().parameters.dest_table",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.dest_db",
										"type": "Expression"
									},
									"sql_name": {
										"value": "@pipeline().parameters.dest_server",
										"type": "Expression"
									},
									"username": {
										"value": "@pipeline().parameters.dest_username",
										"type": "Expression"
									},
									"password": {
										"value": "@pipeline().parameters.dest_password",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_tbl": {
						"type": "string"
					},
					"dest_table": {
						"type": "string"
					},
					"source_db": {
						"type": "string"
					},
					"dest_db": {
						"type": "string"
					},
					"source_server": {
						"type": "string"
					},
					"dest_server": {
						"type": "string"
					},
					"source_usrname": {
						"type": "string"
					},
					"dest_username": {
						"type": "string"
					},
					"source_password": {
						"type": "string"
					},
					"dest_password": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dynamic_file",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.source_container",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.source_folder",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.source_file",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dynamic_file",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.dest_container",
										"type": "Expression"
									},
									"folder": {
										"value": "@pipeline().parameters.dest_folder",
										"type": "Expression"
									},
									"file_name": {
										"value": "@pipeline().parameters.dest_filename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"source_container": {
						"type": "string"
					},
					"source_folder": {
						"type": "string"
					},
					"dest_container": {
						"type": "string"
					},
					"dest_folder": {
						"type": "string"
					},
					"source_file": {
						"type": "string"
					},
					"dest_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/switch_address')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct country from dbo.ADDRESS_COMMON",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "ADDRESS_COMMON"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().COUNTRY",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "INDIA",
												"activities": [
													{
														"name": "Copy data1",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": "SELECT NAME,ADDRESS,CITY,COUNTRY FROM DBO.ADDRESS_COMMON WHERE COUNTRY = 'INDIA'",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "dynamic_tbl",
																"type": "DatasetReference",
																"parameters": {
																	"tbl_name": "ADDRESS_COMMON"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "dynamic_tbl",
																"type": "DatasetReference",
																"parameters": {
																	"tbl_name": "ADDRESS_INDIA"
																}
															}
														]
													}
												]
											},
											{
												"value": "USA",
												"activities": [
													{
														"name": "Copy data2",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": "SELECT * FROM  ADDRESS_COMMON where COUNTRY = 'USA'",
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "dynamic_tbl",
																"type": "DatasetReference",
																"parameters": {
																	"tbl_name": "ADDRESS_COMMON"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "dynamic_tbl",
																"type": "DatasetReference",
																"parameters": {
																	"tbl_name": "ADDRESS_USA"
																}
															}
														]
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Copy data3",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": "select * from ADDRESS_COMMON where country not in ('INDIA','USA')",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "dynamic_tbl",
														"type": "DatasetReference",
														"parameters": {
															"tbl_name": "ADDRESS_COMMON"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "dynamic_tbl",
														"type": "DatasetReference",
														"parameters": {
															"tbl_name": "ADDRESS_OTHERS"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T05:05:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[TUMBLING_WINDOW_PROC]",
								"storedProcedureParameters": {
									"ENDDATE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.windowstarttime",
											"type": "Expression"
										}
									},
									"STARTDATE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.windowendtime",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "cust_source"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "tumbling_cust"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowstarttime": {
						"type": "string"
					},
					"windowendtime": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T07:47:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling_window_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[TUMBLING_WINDOW_PROC]",
								"storedProcedureParameters": {
									"ENDDATE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.windowendtime",
											"type": "Expression"
										}
									},
									"STARTDATE": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.windowstarttime",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "Cust_Source"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "dynamic_tbl",
								"type": "DatasetReference",
								"parameters": {
									"tbl_name": "Tumbling_Cust"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStartTime": {
						"type": "string"
					},
					"windowEndTime": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-17T08:44:31Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql_KV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tbl1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql_KV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputfilekv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adls_KV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emp_sal.csv",
						"folderPath": "INPUT",
						"container": "dataset"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "department_name",
						"type": "String"
					},
					{
						"name": "country_id",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/kvoutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adls_KV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empnull_file",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp_id as short,",
						"          Name as string,",
						"          Salary as short,",
						"          department_name as string,",
						"          country_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sort(asc(Name, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_sort.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "empsal_file",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp_id as short,",
						"          Name as string,",
						"          Salary as short,",
						"          department_name as string,",
						"          country_id as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 aggregate(groupBy(country_id,",
						"          department_name),",
						"     sum_salary = sum(Salary)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_aggregate.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "fuzzy_left",
								"type": "DatasetReference"
							},
							"name": "leftfuzzy"
						},
						{
							"dataset": {
								"referenceName": "fuzzy_right",
								"type": "DatasetReference"
							},
							"name": "rightfuzzy"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Fruits Data} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> leftfuzzy",
						"source(output(",
						"          Fruits as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> rightfuzzy",
						"leftfuzzy, rightfuzzy join(fuzzyCompare({Fruits Data}, Fruits, 88.00),",
						"     joinType:'inner',",
						"     matchType:'fuzzy',",
						"     ignoreSpaces: false,",
						"     scoreColumn:'score',",
						"     broadcast: 'off')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_join.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow5')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "fuzzy_left",
								"type": "DatasetReference"
							},
							"name": "fuzzyleft"
						},
						{
							"dataset": {
								"referenceName": "fuzzy_right",
								"type": "DatasetReference"
							},
							"name": "fuzzyright"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Fruits Data} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> fuzzyleft",
						"source(output(",
						"          Fruits as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> fuzzyright",
						"fuzzyleft, fuzzyright join(fuzzyCompare({Fruits Data}, Fruits, 83.00),",
						"     joinType:'inner',",
						"     matchType:'fuzzy',",
						"     ignoreSpaces: false,",
						"     scoreColumn:'score',",
						"     broadcast: 'off')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_fuzzyjoin.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow6')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "lookupleft",
								"type": "DatasetReference"
							},
							"name": "lookupleft"
						},
						{
							"dataset": {
								"referenceName": "lookupright",
								"type": "DatasetReference"
							},
							"name": "lookupright"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "lookup1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Empid as integer,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> lookupleft",
						"source(output(",
						"          Empid as integer,",
						"          Dept as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> lookupright",
						"lookupleft, lookupright lookup(lookupleft@Empid == lookupright@Empid,",
						"     multiple: false,",
						"     pickup: 'last',",
						"     asc(lookupright@Empid, true),",
						"     asc(Dept, true),",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_lookup.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow7')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "union_emp1",
								"type": "DatasetReference"
							},
							"name": "union1"
						},
						{
							"dataset": {
								"referenceName": "union_diffcolumnname",
								"type": "DatasetReference"
							},
							"name": "union2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPLOYEE_ID as string,",
						"          FIRST_NAME as string,",
						"          LAST_NAME as string,",
						"          SALARY as string,",
						"          DEPARTMENT_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> union1",
						"source(output(",
						"          empname as string,",
						"          fname as string,",
						"          lname as string,",
						"          sal as string,",
						"          dept as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> union2",
						"union1, union2 union(byName: false)~> union",
						"union sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_union.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow8')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "window_fun",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataset_outputfolder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "window1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          employee_id as string,",
						"          first_name as string,",
						"          department_name as string,",
						"          country_id as string,",
						"          salary as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 window(over(department_name),",
						"     desc(salary, true),",
						"     row_num = rowNumber(),",
						"          rank = rank(),",
						"          dense_rank = denseRank(),",
						"          sum_salary = sum(salary),",
						"          avg_salary = avg(salary)) ~> window1",
						"window1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['output_window.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}